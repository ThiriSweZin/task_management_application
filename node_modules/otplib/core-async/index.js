/**
 * otplib-core-async
 *
 * @author Gerald Yeo <contact@fusedthought.com>
 * @version: 12.0.0-1
 * @license: MIT
 **/
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var otplibCore = require('../core');
var otplibHotpAsync = require('../hotp-async');
var otplibTotpAsync = require('../totp-async');
var otplibAuthenticatorAsync = require('../authenticator-async');

function useAsyncClassOnly(className) {
  return class {
    constructor() {
      throw new Error(`You are importing from ${className} from the *-async package.` + ` Please replace your ${className} import with ${className}Async instead.`);
    }
  };
}
const HOTP = useAsyncClassOnly('HOTP');
const TOTP = useAsyncClassOnly('TOTP');
const Authenticator = useAsyncClassOnly('Authenticator');

Object.keys(otplibCore).forEach(function (k) {
  if (k !== 'default') Object.defineProperty(exports, k, {
    enumerable: true,
    get: function () {
      return otplibCore[k];
    }
  });
});
Object.keys(otplibHotpAsync).forEach(function (k) {
  if (k !== 'default') Object.defineProperty(exports, k, {
    enumerable: true,
    get: function () {
      return otplibHotpAsync[k];
    }
  });
});
Object.keys(otplibTotpAsync).forEach(function (k) {
  if (k !== 'default') Object.defineProperty(exports, k, {
    enumerable: true,
    get: function () {
      return otplibTotpAsync[k];
    }
  });
});
Object.keys(otplibAuthenticatorAsync).forEach(function (k) {
  if (k !== 'default') Object.defineProperty(exports, k, {
    enumerable: true,
    get: function () {
      return otplibAuthenticatorAsync[k];
    }
  });
});
exports.Authenticator = Authenticator;
exports.HOTP = HOTP;
exports.TOTP = TOTP;
